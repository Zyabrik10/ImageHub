{"mappings":"AAAO,SAASA,EAAgBC,GAC9B,OAAOA,EACJC,KAAIC,GACI,0BACUA,EAAMC,uFACDD,EAAMC,sBAAsBD,EAAME,qCAAqCF,EAAMG,mKAI/EH,EAAMI,6IAINJ,EAAMK,gJAINL,EAAMM,oJAINN,EAAMO,4FAM3BC,KAAK,K,CC3BHC,eAAeC,EAAYC,EAAOC,EAAO,GAC9C,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,EAAGR,EACHC,KAAMA,EACNQ,SAAU,KAGZ,aAAaC,MACZC,IAAI,4BAA4BT,I,CCTnC,MAAMU,EAAcC,SAASC,cAAc,gBACrCC,EAAoBF,SAASC,cAAc,sBAE3CE,EAAUH,SAASC,cAAc,YAEjCG,EAAmBJ,SAASC,cAAc,cAEhD,IAAII,EAAO,EACPC,EAAQ,GA4EZP,EAAYQ,iBAAiB,UA1C7BtB,eAA2BuB,GACzBA,EAAMC,iBAEN,MAAMC,EAAcR,EAAkBf,MAEhCwB,QAAiBzB,EAAYwB,IAE7BE,KAAEA,GAASD,EAGXrC,EAASsC,EAAKC,KAAKC,QAEzB,GAAsB,IAAlBxC,EAAOyC,OAIP,YAHFC,SAASC,OAAOC,KACd,4EAKFF,SAASC,OAAOE,QAAQ,oBAAoBP,EAAKQ,qBAEnDd,EAAQI,EACRL,EAAO,EAEHO,EAAKQ,UAAY,KACnBf,GAAQ,EACRD,EAAiBiB,MAAMC,QAAU,SAInCnB,EAAQoB,UAAYlD,EAAgBC,GAEpC0B,SAASwB,iBAAiB,kBAAkBC,SAAQC,IAClDA,EAAKnB,iBAAiB,SAASoB,GAASA,EAAMlB,kBAAiB,IAGhD,IAAImB,eAAe,aAAc,CAChDC,aAAc,MACdC,aAAc,K,IAKlB1B,EAAiBG,iBAAiB,SA3ElCtB,iBACI,IACI,MAAM0B,QAAiBzB,EAAYoB,EAAOD,IAEpCO,KAAEA,GAASD,EAEXrC,EAASsC,EAAKC,KAAKC,QAEzBX,EAAQoB,WAAalD,EAAgBC,GAErC0B,SAASwB,iBAAiB,kBAAkBC,SAAQC,IAClDA,EAAKnB,iBAAiB,SAASoB,GAASA,EAAMlB,kBAAiB,IAGhD,IAAImB,eAAe,aAAc,CAChDC,aAAc,MACdC,aAAc,MAGZlB,EAAKQ,WAAa,IAAMf,EAAO,GAAKO,EAAKC,KAAKE,SAChDC,SAASC,OAAOC,KACd,8DAEFd,EAAiBiB,MAAMC,QAAU,QAGnCjB,GAAQ,C,CACX,MAAM0B,GACHf,SAASC,OAAOe,QAAQD,E","sources":["src/js/createImageList.js","src/js/fetchImages.js","src/index.js"],"sourcesContent":["export function createImageList(images) {\n  return images\n    .map(image => {\n      return `\n            <a href=\"${image.webformatURL}\" class=\"gallery__link flex-container-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" data-source=\"${image.largeImageURL}\" />\n                <div class=\"info\">\n                    <p class=\"info-item\">\n                        <b>Likes</b>\n                        ${image.likes}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Views</b>\n                        ${image.views}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Comments</b>\n                        ${image.comments}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Downloads</b>\n                        ${image.downloads}\n                    </p>\n                </div>\n            </a>\n        `;\n    })\n    .join('\\n');\n}\n","export async function fetchImages(value, page = 1){\n  const searchParams = new URLSearchParams({\n    key: '35790595-0862ce34bbcdea66fb3b3d261',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    q: value,\n    page: page,\n    per_page: 40\n  });\n\n  return await axios\n  .get(`https://pixabay.com/api/?${searchParams}`);   \n}\n","import { createImageList } from './js/createImageList.js';\nimport { fetchImages } from './js/fetchImages.js';\n\nconst search_form = document.querySelector('#search-form');\nconst search_form_input = document.querySelector('#search-form input');\n\nconst gallery = document.querySelector('.gallery');\n\nconst load_more_button = document.querySelector(\".load-more\");\n\nlet page = 1;\nlet query = '';\n\nasync function addImage() {\n    try{\n        const response = await fetchImages(query, page);\n      \n        const { data } = response;\n      \n        const images = data.hits.slice();\n      \n        gallery.innerHTML += createImageList(images);\n      \n        document.querySelectorAll('.gallery__link').forEach(item => {\n          item.addEventListener('click', event => event.preventDefault());\n        });\n      \n        const lightbox = new SimpleLightbox('.gallery a', {\n          captionsData: 'alt',\n          captionDelay: 250,\n        });\n      \n        if (data.totalHits <= 40 * (page - 1) + data.hits.length) {\n          Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n          load_more_button.style.display = \"none\";\n        }\n      \n        page += 1;\n    }catch(error){\n        Notiflix.Notify.failure(error);\n    }\n}\n\nasync function searchImage(event) {\n  event.preventDefault();\n\n  const input_value = search_form_input.value;\n\n  const response = await fetchImages(input_value);\n\n  const { data } = response;\n\n  \n  const images = data.hits.slice();\n  \n  if (images.length === 0) {\n    Notiflix.Notify.info(\n      'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n  }\n\n    Notiflix.Notify.success(`Hooray! We found ${data.totalHits} images.`);\n\n  query = input_value;\n  page = 1;\n\n  if (data.totalHits > 40) {\n    page += 1;\n    load_more_button.style.display = 'block';\n  }\n\n\n  gallery.innerHTML = createImageList(images);\n\n  document.querySelectorAll('.gallery__link').forEach(item => {\n    item.addEventListener('click', event => event.preventDefault());\n  });\n\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n\nsearch_form.addEventListener('submit', searchImage);\nload_more_button.addEventListener('click', addImage);\n// load_more_button.addEventListener('click', addImage.bind(load_more_button));\n\n// const { height: cardHeight } = document\n//   .querySelector(\".gallery\")\n//   .firstElementChild.getBoundingClientRect();\n\n// window.scrollBy({\n//   top: cardHeight * 2,\n//   behavior: \"smooth\",\n// });\n"],"names":["$a1197dc32078fb80$export$3aa3fecd1274d37","images","map","image","webformatURL","tags","largeImageURL","likes","views","comments","downloads","join","async","$78401bf63fbcf63c$export$be0d73ca56f1a1d","value","page","searchParams","URLSearchParams","key","image_type","orientation","safesearch","q","per_page","axios","get","$1f0dc3b9307be026$var$search_form","document","querySelector","$1f0dc3b9307be026$var$search_form_input","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$load_more_button","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$query","addEventListener","event1","preventDefault","input_value","response","data","hits","slice","length","Notiflix","Notify","info","success","totalHits","style","display","innerHTML","querySelectorAll","forEach","item","event","SimpleLightbox","captionsData","captionDelay","error","failure"],"version":3,"file":"index.194fddb8.js.map"}