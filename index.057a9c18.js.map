{"mappings":"AAAO,SAASA,EAAgBC,GAC9B,OAAOA,EACJC,KAAIC,GACI,0BACUA,EAAMC,uFACDD,EAAMC,sBAAsBD,EAAME,qCAAqCF,EAAMG,mKAI/EH,EAAMI,6IAINJ,EAAMK,gJAINL,EAAMM,oJAINN,EAAMO,4FAM3BC,KAAK,K,CC3BHC,eAAeC,EAAYC,EAAOC,EAAO,GAC9C,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,EAAGR,EACHC,KAAMA,EACNQ,SAAU,KAGZ,aAAaC,MACZC,IAAI,4BAA4BT,I,CCZ5B,SAASU,EAAkBC,GAC9BC,SAASC,iBAAiBF,GAAOG,SAAQC,IACvCA,EAAKC,iBAAiB,SAASC,GAASA,EAAMC,kBAAiB,G,CCGrE,MAAMC,EAAcP,SAASQ,cAAc,gBACrCC,EAAoBT,SAASQ,cAAc,sBAE3CE,EAAcV,SAASQ,cAAc,YAClBR,SAASQ,cAAc,cAEhD,IAAIG,EAEAC,EAAO,EACPC,EAAQ,GACRC,GAAY,EACZC,GAAiB,EAuErBR,EAAYH,iBAAiB,UAvC7BpB,eAA2BqB,GACzBA,EAAMC,iBAEN,IACE,MAAMU,EAAcP,EAAkBvB,MAAM+B,OACtCC,QAAiBjC,EAAY+B,IAC7BG,KAAEA,GAASD,EAEjB,GAAyB,IAArBC,EAAKC,KAAKC,OAIZ,YAHAC,SAASC,OAAOC,KACd,4EAKJF,SAASC,OAAOE,QAAQ,oBAAoBN,EAAKO,qBAEjDb,EAAQG,EACRF,GAAY,EACZC,GAAiB,EACjBH,EAAO,EAEHO,EAAKO,UAAY,KACnBd,GAAQ,GAIV,MAAMe,EAAQvD,EAAgB+C,EAAKC,MAEnCV,EAAYkB,UAAYD,EACxB7B,EAAkB,kBAElBa,EC/Ea,IAAIkB,eAAe,aAAc,CAC9CC,aAAc,MACdC,aAAc,K,CD8Ed,MAAOC,GACPV,SAASC,OAAOU,QAAQ,8BACxBC,QAAQF,MAAMA,E,KAMlB5B,iBACE,SACA+B,EAAEC,UAAS,KACLC,OAAOC,QAAUC,aAAe7B,EAAY8B,eA1EpDxD,iBACE,IACE,MAAMkC,QAAiBjC,EAAY4B,EAAOD,IACpCO,KAAEA,GAASD,EACjB,IAAKH,EAAgB,CACnB,GAAII,EAAKO,WAAa,IAAMd,EAAO,GAAKO,EAAKC,KAAKC,QAAUP,EAO1D,OANIK,EAAKO,WAAa,IACpBJ,SAASC,OAAOC,KACd,mEAGJT,GAAiB,GAInB,MAAMY,EAAQvD,EAAgB+C,EAAKC,MAEnCV,EAAY+B,mBAAmB,YAAad,GAC5C7B,EAAkB,kBAElBa,EAAQ+B,UAER9B,GAAQ,C,EAEV,MAAOoB,GACPV,SAASC,OAAOU,QAAQ,8BACxBC,QAAQF,MAAMA,E,EAiDZW,GACA7B,GAAY,GACPA,GAAY,CAAK,GACvB","sources":["src/js/createImageList.js","src/js/fetchImages.js","src/js/preventItemsClick.js","src/index.js","src/js/initSliderLightBox.js"],"sourcesContent":["export function createImageList(images) {\n  return images\n    .map(image => {\n      return `\n            <a href=\"${image.webformatURL}\" class=\"gallery__link flex-container-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" data-source=\"${image.largeImageURL}\" />\n                <div class=\"info\">\n                    <p class=\"info-item\">\n                        <b>Likes</b>\n                        ${image.likes}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Views</b>\n                        ${image.views}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Comments</b>\n                        ${image.comments}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Downloads</b>\n                        ${image.downloads}\n                    </p>\n                </div>\n            </a>\n        `;\n    })\n    .join('\\n');\n}\n","export async function fetchImages(value, page = 1){\n  const searchParams = new URLSearchParams({\n    key: '35790595-0862ce34bbcdea66fb3b3d261',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: false,\n    q: value,\n    page: page,\n    per_page: 40\n  });\n\n  return await axios\n  .get(`https://pixabay.com/api/?${searchParams}`);   \n}\n","export function preventItemsClick(items){\n    document.querySelectorAll(items).forEach(item => {\n      item.addEventListener('click', event => event.preventDefault());\n    });\n}","import { createImageList } from './js/createImageList.js';\nimport { fetchImages } from './js/fetchImages.js';\nimport { initSliderLightBox } from './js/initSliderLightBox.js';\nimport { preventItemsClick } from './js/preventItemsClick.js';\n\nconst search_form = document.querySelector('#search-form');\nconst search_form_input = document.querySelector('#search-form input');\n\nconst gallery_box = document.querySelector('.gallery');\nconst load_more_button = document.querySelector('.load-more');\n\nlet gallery;\n\nlet page = 1;\nlet query = '';\nlet reach_end = false;\nlet isGalleryEnded = false;\n\nasync function addImage() {\n  try {\n    const response = await fetchImages(query, page);\n    const { data } = response;\n    if (!isGalleryEnded) {\n      if (data.totalHits <= 40 * (page - 1) + data.hits.length && reach_end) {\n        if (data.totalHits >= 40)\n          Notiflix.Notify.info(\n            \"We're sorry, but you've reached the end of search results.\"\n          );\n        // load_more_button.style.display = 'none';\n        isGalleryEnded = true;\n        return;\n      }\n\n      const links = createImageList(data.hits);\n\n      gallery_box.insertAdjacentHTML('beforeend', links);\n      preventItemsClick('.gallery__link');\n\n      gallery.refresh();\n\n      page += 1;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Oops! Something went wrong');\n    console.error(error);\n  }\n}\n\nasync function searchImage(event) {\n  event.preventDefault();\n\n  try {\n    const input_value = search_form_input.value.trim();\n    const response = await fetchImages(input_value);\n    const { data } = response;\n\n    if (data.hits.length === 0) {\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    Notiflix.Notify.success(`Hooray! We found ${data.totalHits} images.`);\n\n    query = input_value;\n    reach_end = false;\n    isGalleryEnded = false;\n    page = 1;\n\n    if (data.totalHits > 40) {\n      page += 1;\n      // load_more_button.style.display = 'block';\n    }\n\n    const links = createImageList(data.hits);\n\n    gallery_box.innerHTML = links;\n    preventItemsClick('.gallery__link');\n\n    gallery = initSliderLightBox();\n  } catch (error) {\n    Notiflix.Notify.failure('Oops! Something went wrong');\n    console.error(error);\n  }\n}\n\nsearch_form.addEventListener('submit', searchImage);\n// load_more_button.addEventListener('click', addImage);\naddEventListener(\n  'scroll',\n  _.throttle(() => {\n    if (window.scrollY + innerHeight >= gallery_box.scrollHeight) {\n      addImage();\n      reach_end = true;\n    } else reach_end = false;\n  }, 500)\n);\n","export function initSliderLightBox() {\n const gallery = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n\n  return gallery;\n}\n"],"names":["$a1197dc32078fb80$export$3aa3fecd1274d37","images","map","image","webformatURL","tags","largeImageURL","likes","views","comments","downloads","join","async","$78401bf63fbcf63c$export$be0d73ca56f1a1d","value","page","searchParams","URLSearchParams","key","image_type","orientation","safesearch","q","per_page","axios","get","$0a5b7b32aa171984$export$d8310f7a64c56e9a","items","document","querySelectorAll","forEach","item","addEventListener","event","preventDefault","$1f0dc3b9307be026$var$search_form","querySelector","$1f0dc3b9307be026$var$search_form_input","$1f0dc3b9307be026$var$gallery_box","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$query","$1f0dc3b9307be026$var$reach_end","$1f0dc3b9307be026$var$isGalleryEnded","input_value","trim","response","data","hits","length","Notiflix","Notify","info","success","totalHits","links","innerHTML","SimpleLightbox","captionsData","captionDelay","error","failure","console","_","throttle","window","scrollY","innerHeight","scrollHeight","insertAdjacentHTML","refresh","$1f0dc3b9307be026$var$addImage"],"version":3,"file":"index.057a9c18.js.map"}