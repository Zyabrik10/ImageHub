{"mappings":"AAAO,SAASA,EAAgBC,GAC9B,OAAOA,EACJC,KAAIC,GACI,0BACUA,EAAMC,uFACDD,EAAMC,sBAAsBD,EAAME,qCAAqCF,EAAMG,mKAI/EH,EAAMI,6IAINJ,EAAMK,gJAINL,EAAMM,oJAINN,EAAMO,4FAM3BC,KAAK,K,CC3BHC,eAAeC,EAAYC,EAAOC,EAAO,GAC9C,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,EAAGR,EACHC,KAAMA,EACNQ,SAAU,KAGZ,aAAaC,MACZC,IAAI,4BAA4BT,I,CCRnC,MAAMU,EAAcC,SAASC,cAAc,gBACrCC,EAAoBF,SAASC,cAAc,sBAE3CE,EAAcH,SAASC,cAAc,YAErCG,EAAmBJ,SAASC,cAAc,cAEhD,IAAII,EAEAC,EAAO,EACPC,EAAQ,GAoEZR,EAAYS,iBAAiB,UAvC7BvB,eAA2BwB,GACzBA,EAAMC,iBAEN,IACE,MAAMC,EAAcT,EAAkBf,MAChCyB,QAAiB1B,EAAYyB,IAC7BE,KAAEA,GAASD,EAEjB,GAAyB,IAArBC,EAAKC,KAAKC,OAIZ,YAHAC,SAASC,OAAOC,KACd,4EAKJF,SAASC,OAAOE,QAAQ,oBAAoBN,EAAKO,qBAEjDb,EAAQI,EACRL,EAAO,EAEHO,EAAKO,UAAY,KACnBd,GAAQ,EACRF,EAAiBiB,MAAMC,QAAU,SAGnCnB,EAAYoB,UAAYlD,EAAgBwC,EAAKC,MAE7Cd,SAASwB,iBAAiB,kBAAkBC,SAAQC,IAClDA,EAAKlB,iBAAiB,SAASmB,GAASA,EAAMjB,kBAAiB,IAGjEL,ECzEa,IAAIuB,eAAe,aAAc,CAC9CC,aAAc,MACdC,aAAc,K,CDyEd,MAAMC,GACNf,SAASC,OAAOe,QAAQ,8BACxBC,QAAQF,MAAMA,E,KAKlB3B,EAAiBI,iBAAiB,SAnElCvB,iBACE,IACE,MAAM2B,QAAiB1B,EAAYqB,EAAOD,IACpCO,KAAEA,GAASD,EAEjBT,EAAYoB,WAAalD,EAAgBwC,EAAKC,MAC9Cd,SAASwB,iBAAiB,kBAAkBC,SAAQC,IAClDA,EAAKlB,iBAAiB,SAASmB,GAASA,EAAMjB,kBAAiB,IAGjEL,EAAQ6B,UAGJrB,EAAKO,WAAa,IAAMd,EAAO,GAAKO,EAAKC,KAAKC,SAChDC,SAASC,OAAOC,KACd,8DAEFd,EAAiBiB,MAAMC,QAAU,QAGnChB,GAAQ,C,CACR,MAAOyB,GACPf,SAASC,OAAOe,QAAQ,8BACxBC,QAAQF,MAAMA,E","sources":["src/js/createImageList.js","src/js/fetchImages.js","src/index.js","src/js/initSliderLightBox.js"],"sourcesContent":["export function createImageList(images) {\n  return images\n    .map(image => {\n      return `\n            <a href=\"${image.webformatURL}\" class=\"gallery__link flex-container-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" data-source=\"${image.largeImageURL}\" />\n                <div class=\"info\">\n                    <p class=\"info-item\">\n                        <b>Likes</b>\n                        ${image.likes}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Views</b>\n                        ${image.views}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Comments</b>\n                        ${image.comments}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Downloads</b>\n                        ${image.downloads}\n                    </p>\n                </div>\n            </a>\n        `;\n    })\n    .join('\\n');\n}\n","export async function fetchImages(value, page = 1){\n  const searchParams = new URLSearchParams({\n    key: '35790595-0862ce34bbcdea66fb3b3d261',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    q: value,\n    page: page,\n    per_page: 40\n  });\n\n  return await axios\n  .get(`https://pixabay.com/api/?${searchParams}`);   \n}\n","import { createImageList } from './js/createImageList.js';\nimport { fetchImages } from './js/fetchImages.js';\nimport { initSliderLightBox } from './js/initSliderLightBox.js';\n\nconst search_form = document.querySelector('#search-form');\nconst search_form_input = document.querySelector('#search-form input');\n\nconst gallery_box = document.querySelector('.gallery');\n\nconst load_more_button = document.querySelector('.load-more');\n\nlet gallery;\n\nlet page = 1;\nlet query = '';\n\nasync function addImage() {\n  try {\n    const response = await fetchImages(query, page);\n    const { data } = response;\n\n    gallery_box.innerHTML += createImageList(data.hits);\n    document.querySelectorAll('.gallery__link').forEach(item => {\n      item.addEventListener('click', event => event.preventDefault());\n    });\n  \n    gallery.refresh();\n  \n\n    if (data.totalHits <= 40 * (page - 1) + data.hits.length) {\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      load_more_button.style.display = 'none';\n    }\n\n    page += 1;\n  } catch (error) {\n    Notiflix.Notify.failure('Oops! Something went wrong');\n    console.error(error);\n  }\n}\n\nasync function searchImage(event) {\n  event.preventDefault();\n\n  try{\n    const input_value = search_form_input.value;\n    const response = await fetchImages(input_value);\n    const { data } = response;\n  \n    if (data.hits.length === 0) {\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n  \n    Notiflix.Notify.success(`Hooray! We found ${data.totalHits} images.`);\n  \n    query = input_value;\n    page = 1;\n  \n    if (data.totalHits > 40) {\n      page += 1;\n      load_more_button.style.display = 'block';\n    }\n  \n    gallery_box.innerHTML = createImageList(data.hits);\n\n    document.querySelectorAll('.gallery__link').forEach(item => {\n      item.addEventListener('click', event => event.preventDefault());\n    });\n  \n    gallery = initSliderLightBox();\n    \n  } catch(error){\n    Notiflix.Notify.failure(\"Oops! Something went wrong\");\n    console.error(error);\n  }\n}\n\nsearch_form.addEventListener('submit', searchImage);\nload_more_button.addEventListener('click', addImage);","export function initSliderLightBox() {\n const gallery = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n\n  return gallery;\n}\n"],"names":["$a1197dc32078fb80$export$3aa3fecd1274d37","images","map","image","webformatURL","tags","largeImageURL","likes","views","comments","downloads","join","async","$78401bf63fbcf63c$export$be0d73ca56f1a1d","value","page","searchParams","URLSearchParams","key","image_type","orientation","safesearch","q","per_page","axios","get","$1f0dc3b9307be026$var$search_form","document","querySelector","$1f0dc3b9307be026$var$search_form_input","$1f0dc3b9307be026$var$gallery_box","$1f0dc3b9307be026$var$load_more_button","$1f0dc3b9307be026$var$gallery","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$query","addEventListener","event1","preventDefault","input_value","response","data","hits","length","Notiflix","Notify","info","success","totalHits","style","display","innerHTML","querySelectorAll","forEach","item","event","SimpleLightbox","captionsData","captionDelay","error","failure","console","refresh"],"version":3,"file":"index.51665038.js.map"}