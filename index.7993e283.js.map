{"mappings":"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","sources":["src/js/preventItemsClick.js","src/js/utility/api/fetchImages.js","src/js/config/global.js","src/js/class/API.js","src/js/class/ImageForm.js","src/js/class/ImageGallary.js","src/index.js"],"sourcesContent":["export function preventItemsClick(items){\n    document.querySelectorAll(items).forEach(item => {\n      item.addEventListener('click', event => event.preventDefault());\n    });\n}","import { imageAPI } from '../../config';\n\nexport default async function fetchImages({\n  query,\n  page = 1,\n  per_page = 40,\n  safesearch = false,\n  image_type = 'photo',\n  orientation = 'horizontal',\n}) {\n  return await imageAPI.fetch({\n    query: {\n      key: imageAPI.token,\n      image_type,\n      orientation,\n      safesearch,\n      q: query,\n      page,\n      per_page,\n    },\n  });\n}\n","import { API, ImageForm, ImageGallary } from '../class';\n\nexport const apiConfig = {\n  page: 1,\n  query: '',\n};\n\nexport const config = {\n  reach_end: false,\n  isGalleryEnded: false,\n};\n\nexport const imageAPI = new API({\n  baseURL: 'https://pixabay.com/api',\n  token: '35790595-0862ce34bbcdea66fb3b3d261',\n});\n\nexport const imageForm = new ImageForm();\nexport const imageGallary = new ImageGallary();\n","export default class API {\n  constructor({ baseURL, token = '' }) {\n    this.baseURL = baseURL;\n    this.token = token;\n  }\n\n  async fetch({ api = '', query = {} }) {\n    const searchParams = new URLSearchParams(query);\n\n    const url = `${this.baseURL}${api}/?${searchParams}`;\n\n    return await axios.get(url);\n  }\n}\n","import { apiConfig, config, imageGallary } from '../config';\nimport { preventItemsClick } from '../preventItemsClick';\nimport { fetchImages } from '../utility/api';\n\nexport default class ImageForm {\n  constructor() {\n    this.form = undefined;\n  }\n\n  init(selector) {\n    this.form = document.querySelector(selector);\n    this.searchInput = this.form.input;\n    this.form.addEventListener('submit', this.onSubmit.bind(this));\n  }\n\n  async search(desire) {\n    try {\n      let input_value = this.searchInput.value.trim();\n\n      if (input_value === '') input_value = desire;\n\n      const response = await fetchImages({\n        query: input_value,\n      });\n\n      const { data } = response;\n\n      if (data.hits.length === 0) {\n        Notiflix.Notify.info(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n\n      Notiflix.Notify.success(`Hooray! We found ${data.totalHits} images.`);\n\n      apiConfig.query = input_value;\n      apiConfig.page = 1;\n      config.reach_end = false;\n      config.isGalleryEnded = false;\n\n      if (data.totalHits > 40) {\n        config.page += 1;\n      }\n\n      const links = imageGallary.createImageList(data.hits);\n\n      imageGallary.gallery.innerHTML = links;\n      preventItemsClick('.gallery__link');\n\n      imageGallary.initGalleryBox();\n    } catch (error) {\n      Notiflix.Notify.failure('Oops! Something went wrong');\n      console.error(error);\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.search();\n  }\n}\n","import { apiConfig, config } from '../config';\nimport { preventItemsClick } from '../preventItemsClick';\nimport { fetchImages } from '../utility/api';\n\nexport default class ImageGallary {\n  init(gallerySelector) {\n    this.gallerySelector = gallerySelector;\n    this.gallery = document.querySelector(this.gallerySelector);\n    this.galleryLightBox = new SimpleLightbox(`${this.gallerySelector} a`, {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n  }\n\n  initGalleryBox() {\n    this.galleryLightBox = new SimpleLightbox(`${this.gallerySelector} a`, {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n  }\n\n  async add() {\n    try {\n      const response = await fetchImages({\n        query: apiConfig.query,\n        page: apiConfig.page,\n      });\n      const { data } = response;\n      if (!config.isGalleryEnded) {\n        if (\n          data.totalHits <= 40 * (apiConfig.page - 1) + data.hits.length &&\n          config.reach_end\n        ) {\n          if (data.totalHits >= 40)\n            Notiflix.Notify.info(\n              \"We're sorry, but you've reached the end of search results.\"\n            );\n          config.isGalleryEnded = true;\n          return;\n        }\n\n        const links = this.createImageList(data.hits);\n\n        this.gallery.insertAdjacentHTML('beforeend', links);\n        preventItemsClick('.gallery__link');\n\n        this.galleryLightBox.refresh();\n\n        apiConfig.page += 1;\n      }\n    } catch (error) {\n      Notiflix.Notify.failure('Oops! Something went wrong');\n      console.error(error);\n    }\n  }\n\n  createImageList(images) {\n    return images\n      .map(image => {\n        return `\n            <a href=\"${image.webformatURL}\" class=\"gallery__link flex-container-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" data-source=\"${image.largeImageURL}\" />\n            </a>\n        `;\n      })\n      .join('\\n');\n  }\n}\n","import { apiConfig, config, imageForm, imageGallary } from './js/config';\n\nfunction windowOnLoad() {\n  imageForm.init('#search-form');\n  imageGallary.init('.gallery');\n\n  imageForm.search('cats');\n\n  window.addEventListener(\n    'scroll',\n    _.throttle(() => {\n      if (window.scrollY + innerHeight >= imageGallary.gallery.scrollHeight) {\n        imageGallary.add(apiConfig.query, apiConfig.page);\n        config.reach_end = true;\n      } else config.reach_end = false;\n    }, 500)\n  );\n}\n\nwindow.addEventListener('load', windowOnLoad);\n"],"names":["$0a5b7b32aa171984$export$d8310f7a64c56e9a","items","document","querySelectorAll","forEach","item","addEventListener","event","preventDefault","async","$2770ef3105987a6e$export$2e2bcd8739ae039","query","page","per_page","safesearch","image_type","orientation","$763145494115d42c$export$b60708e9533f01d7","fetch","key","token","q","$763145494115d42c$export$60b54ddee76676c0","$763145494115d42c$export$e506a1d27d1eaa20","reach_end","isGalleryEnded","api","searchParams","URLSearchParams","url","this","baseURL","axios","get","constructor","$763145494115d42c$export$e124ce1d5dd01885","init","selector","form","querySelector","searchInput","input","onSubmit","bind","desire","input_value","value","trim","response","data","hits","length","Notiflix","Notify","info","success","totalHits","links","$763145494115d42c$export$a78e4d02e8e51c19","createImageList","gallery","innerHTML","initGalleryBox","error","failure","console","e","search","undefined","gallerySelector","galleryLightBox","SimpleLightbox","captionsData","captionDelay","insertAdjacentHTML","refresh","images","map","image","webformatURL","tags","largeImageURL","join","window","_","throttle","scrollY","innerHeight","scrollHeight","add"],"version":3,"file":"index.7993e283.js.map"}